
import junit.framework.TestCase;
/**
* Импортируем все классы из пакета для проверки тестовой логики,
* проверки результатов расчета
*/
import static org.junit.Assert.*;

/**
 * Импортируем все классы из пакета проведения для тестирования
 */
import org.junit.*;
/**
* Создаем класс для тестирования расчета
* коммунальных услуг
*/


public class junit_t extends TestCase {

	/**
	 * Импортируем все классы из пакета проведения для тестирования
	 */

	public Calculations Calculations;

	/**
	* Инициализируем экземпляр класса для тестирования
	*/

  /**
  * Аннотация, указывающая на метод, который будет выполняться перед каждым
  * запуском теста
  */

  @Before
  /**
   * Создаем метод, который будет выполняться перед каждым запуском теста;
   * в нем устанавливаем входные параметры для тестирования.
   */

  public void testinit() {
  /**
  */
	  /**
	   * Аннотация, указывающая на то, что за ней следует тестируемый метод.
	   */

  }

  @Test
  /**
  * Объявляем метод, который будем тестировать, а именно
  * расчет стоимости коммунальных услуг.
  */

  public void test() {
	  /**
	   * * Присваиваем вводным данным значения

	  */

	  double Flat_Size =  1;
	  double Hot_Water = 1;
	  double Cold_Water = 1;
	  double Gas_Flat = 1;
	  double Electricity = 1;
	  /**
		  * Присваиваем переменной значение 210.36
		  * (верный/ожидаемый результат расчета коммунальных услуг = 210.36)
		  */


  double summary_expected = 210.36;
  /**

  * Присваиваем переменной значени
  * реально получившийся результат в ходе прохождения теста
  */

  double summary_actual = Calculations.getPrice_Flat(Flat_Size, Hot_Water, Cold_Water, Gas_Flat, Electricity);

  /**
   * Сравниваем значения верного (ожидаемого) результата
   * и реально получившегося результата;
   * если результаты равны, тест проходит успешно.
   */

  assertEquals(summary_expected,summary_actual);
  }
  /**
   * Аннотация, указывающая на метод, который будет выполняться после каждого
   * прохождения теста.
   */

  @After

  /**
   * Создаем метод, который будет выполняться после каждого прохождения теста
   */
  public void teststop(){
	  /**
	   */

	 	  /**
	 	  * Обнуляем переменную после завершения теста
	 	  */


 Calculations = null;
  }
}
